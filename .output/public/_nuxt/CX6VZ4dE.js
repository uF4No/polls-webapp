import{aq as I,ar as U,as as W,at as H,au as J,av as K,aw as Q,ax as N,ay as X,az as L,aA as Y,aB as Z,aC as tt,aD as nt,aE as et,h as at,aF as ot,aG as rt,z as T}from"./B6x4_DXj.js";import{c as it,d as st,e as ct,f as P,h as ut,i as lt,j as pt,k as dt,s as yt,l as mt,n as ht,p as wt,g as b,w as gt,b as Tt,o as ft}from"./DDHX_lXK.js";class B extends I{constructor({docsPath:o}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."].join(`
`),{docsPath:o,docsSlug:"account",name:"AccountNotFoundError"})}}class A extends I{constructor({docsPath:o,metaMessages:n,type:r}){super(`Account type "${r}" is not supported.`,{docsPath:o,metaMessages:n,name:"AccountTypeNotSupportedError"})}}function Ct({chain:t,currentChainId:o}){if(!t)throw new U;if(o!==t.id)throw new W({chain:t,currentChainId:o})}function Pt(t,{docsPath:o,...n}){const r=(()=>{const c=it(t,n);return c instanceof H?t:c})();return new J(r,{docsPath:o,...n})}const E=new K(128);async function bt(t,o){var M,q,S,z;const{account:n=t.account,chain:r=t.chain,accessList:c,authorizationList:e,blobs:i,data:u,gas:l,gasPrice:a,maxFeePerBlobGas:p,maxFeePerGas:d,maxPriorityFeePerGas:w,nonce:F,value:R,..._}=o;if(typeof n>"u")throw new B({docsPath:"/docs/actions/wallet/sendTransaction"});const s=n?N(n):null;try{st(o);const y=await(async()=>{if(o.to)return o.to;if(e&&e.length>0)return await ct({authorization:e[0]}).catch(()=>{throw new I("`to` is required. Could not infer from `authorizationList`.")})})();if((s==null?void 0:s.type)==="json-rpc"||s===null){let h;r!==null&&(h=await P(t,ut,"getChainId")({}),Ct({currentChainId:h,chain:r}));const g=(S=(q=(M=t.chain)==null?void 0:M.formatters)==null?void 0:q.transactionRequest)==null?void 0:S.format,V=(g||Q)({...lt(_,{format:g}),accessList:c,authorizationList:e,blobs:i,chainId:h,data:u,from:s==null?void 0:s.address,gas:l,gasPrice:a,maxFeePerBlobGas:p,maxFeePerGas:d,maxPriorityFeePerGas:w,nonce:F,to:y,value:R}),G=E.get(t.uid),j=G?"wallet_sendTransaction":"eth_sendTransaction";try{return await t.request({method:j,params:[V]},{retryCount:0})}catch(k){if(G===!1)throw k;const m=k;if(m.name==="InvalidInputRpcError"||m.name==="InvalidParamsRpcError"||m.name==="MethodNotFoundRpcError"||m.name==="MethodNotSupportedRpcError")return await t.request({method:"wallet_sendTransaction",params:[V]},{retryCount:0}).then(v=>(E.set(t.uid,!0),v)).catch(v=>{const x=v;throw x.name==="MethodNotFoundRpcError"||x.name==="MethodNotSupportedRpcError"?(E.set(t.uid,!1),m):x});throw m}}if((s==null?void 0:s.type)==="local"){const h=await P(t,pt,"prepareTransactionRequest")({account:s,accessList:c,authorizationList:e,blobs:i,chain:r,data:u,gas:l,gasPrice:a,maxFeePerBlobGas:p,maxFeePerGas:d,maxPriorityFeePerGas:w,nonce:F,nonceManager:s.nonceManager,parameters:[...dt,"sidecars"],value:R,..._,to:y}),g=(z=r==null?void 0:r.serializers)==null?void 0:z.transaction,O=await s.signTransaction(h,{serializer:g});return await P(t,yt,"sendRawTransaction")({serializedTransaction:O})}throw(s==null?void 0:s.type)==="smart"?new A({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"}):new A({docsPath:"/docs/actions/wallet/sendTransaction",type:s==null?void 0:s.type})}catch(y){throw y instanceof A?y:Pt(y,{...o,account:s,chain:o.chain||void 0})}}async function vt(t,o){const{abi:n,account:r=t.account,address:c,args:e,dataSuffix:i,functionName:u,...l}=o;if(typeof r>"u")throw new B({docsPath:"/docs/contract/writeContract"});const a=r?N(r):null,p=mt({abi:n,args:e,functionName:u});try{return await P(t,bt,"sendTransaction")({data:`${p}${i?i.replace("0x",""):""}`,to:c,account:a,...l})}catch(d){throw ht(d,{abi:n,address:c,args:e,docsPath:"/docs/contract/writeContract",functionName:u,sender:a==null?void 0:a.address})}}function xt(t,o={}){const{key:n="custom",name:r="Custom Provider",retryDelay:c}=o;return({retryCount:e})=>X({key:n,name:r,request:t.request.bind(t),retryCount:o.retryCount??e,retryDelay:c,type:"custom"})}function At(t){const{key:o="public",name:n="Public Client"}=t;return L({...t,key:o,name:n,type:"publicClient"}).extend(wt)}async function Et(t,o={}){let n;if(o.connector){const{connector:a}=o;if(t.state.status==="reconnecting"&&!a.getAccounts&&!a.getChainId)throw new Y({connector:a});const[p,d]=await Promise.all([a.getAccounts(),a.getChainId()]);n={accounts:p,chainId:d,connector:a}}else n=t.state.connections.get(t.state.current);if(!n)throw new Z;const r=o.chainId??n.chainId,c=await n.connector.getChainId();if(c!==n.chainId)throw new tt({connectionChainId:n.chainId,connectorChainId:c});const e=n.connector;if(e.getClient)return e.getClient({chainId:r});const i=N(o.account??n.accounts[0]);if(i.address=nt(i.address),o.account&&!n.accounts.some(a=>a.toLowerCase()===i.address.toLowerCase()))throw new et({address:i.address,connector:e});const u=t.chains.find(a=>a.id===r),l=await n.connector.getProvider({chainId:r});return L({account:i,chain:u,name:"Connector Client",transport:a=>xt(l)({...a,retryCount:0})})}async function D(t,o){const{chainId:n,timeout:r=0,...c}=o,e=t.getClient({chainId:n}),u=await b(e,gt,"waitForTransactionReceipt")({...c,timeout:r});if(u.status==="reverted"){const a=await b(e,Tt,"getTransaction")({hash:u.transactionHash}),d=await b(e,ft,"call")({...a,data:a.input,gasPrice:a.type!=="eip1559"?a.gasPrice:void 0,maxFeePerGas:a.type==="eip1559"?a.maxFeePerGas:void 0,maxPriorityFeePerGas:a.type==="eip1559"?a.maxPriorityFeePerGas:void 0}),w=d!=null&&d.data?at(`0x${d.data.substring(138)}`):"unknown reason";throw new Error(w)}return{...u,chainId:e.chain.id}}async function $(t,o){const{account:n,chainId:r,connector:c,...e}=o;let i;return typeof n=="object"&&(n==null?void 0:n.type)==="local"?i=t.getClient({chainId:r}):i=await Et(t,{account:n??void 0,chainId:r,connector:c}),await b(i,vt,"writeContract")({...e,...n?{account:n}:{},chain:r?{id:r}:null})}const f="0xe888F8eDfd68F66c2a10AB1da561Cacb99AD9293",C=[{type:"function",name:"createPoll",inputs:[{name:"_title",type:"string",internalType:"string"},{name:"_optionOne",type:"string",internalType:"string"},{name:"_optionTwo",type:"string",internalType:"string"},{name:"_durationInMinutes",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"nonpayable"},{type:"function",name:"getAllPollIds",inputs:[],outputs:[{name:"",type:"uint256[]",internalType:"uint256[]"}],stateMutability:"view"},{type:"function",name:"getAllPolls",inputs:[],outputs:[{name:"",type:"tuple[]",internalType:"struct PollContract.PollInfo[]",components:[{name:"id",type:"uint256",internalType:"uint256"},{name:"title",type:"string",internalType:"string"},{name:"deadline",type:"uint256",internalType:"uint256"},{name:"owner",type:"address",internalType:"address"},{name:"optionOneVotes",type:"uint256",internalType:"uint256"},{name:"optionTwoVotes",type:"uint256",internalType:"uint256"}]}],stateMutability:"view"},{type:"function",name:"getPoll",inputs:[{name:"_pollId",type:"uint256",internalType:"uint256"}],outputs:[{name:"id",type:"uint256",internalType:"uint256"},{name:"owner",type:"address",internalType:"address"},{name:"title",type:"string",internalType:"string"},{name:"optionOne",type:"string",internalType:"string"},{name:"optionTwo",type:"string",internalType:"string"},{name:"optionOneVotes",type:"uint256",internalType:"uint256"},{name:"optionTwoVotes",type:"uint256",internalType:"uint256"},{name:"deadline",type:"uint256",internalType:"uint256"},{name:"hasVoted",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"getVoteStatus",inputs:[{name:"_pollId",type:"uint256",internalType:"uint256"},{name:"_voter",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"pollIds",inputs:[{name:"",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"polls",inputs:[{name:"",type:"uint256",internalType:"uint256"}],outputs:[{name:"id",type:"uint256",internalType:"uint256"},{name:"owner",type:"address",internalType:"address"},{name:"title",type:"string",internalType:"string"},{name:"optionOne",type:"string",internalType:"string"},{name:"optionTwo",type:"string",internalType:"string"},{name:"optionOneVotes",type:"uint256",internalType:"uint256"},{name:"optionTwoVotes",type:"uint256",internalType:"uint256"},{name:"deadline",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"vote",inputs:[{name:"_pollId",type:"uint256",internalType:"uint256"},{name:"_option",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"nonpayable"},{type:"event",name:"PollCreated",inputs:[{name:"pollId",type:"uint256",indexed:!0,internalType:"uint256"},{name:"owner",type:"address",indexed:!0,internalType:"address"},{name:"title",type:"string",indexed:!1,internalType:"string"},{name:"optionOne",type:"string",indexed:!1,internalType:"string"},{name:"optionTwo",type:"string",indexed:!1,internalType:"string"},{name:"deadline",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"event",name:"Voted",inputs:[{name:"pollId",type:"uint256",indexed:!0,internalType:"uint256"},{name:"voter",type:"address",indexed:!0,internalType:"address"},{name:"option",type:"uint8",indexed:!1,internalType:"uint8"}],anonymous:!1}];async function Ft(){const t=At({chain:ot,transport:rt("https://sepolia.era.zksync.dev")});return{getAllPolls:async()=>{try{const e=await t.readContract({address:f,abi:C,functionName:"getAllPolls"});return console.log("polls :>> ",e),e}catch(e){throw console.error("Error fetching polls:",e),e}},createPoll:async({title:e,optionOne:i,optionTwo:u,durationInMinutes:l})=>{try{console.log("Creating poll with params:",{title:e,optionOne:i,optionTwo:u,durationInMinutes:l});const a=await $(T,{address:f,abi:C,functionName:"createPoll",args:[e,i,u,l]});console.log("Transaction hash:",a);const p=await D(T,{hash:a,timeout:6e4});if(console.log("Transaction receipt:",p),p.status==="reverted")throw new Error("Transaction reverted");return p}catch(a){throw console.error("Error in createPoll:",a),a}},getPoll:async e=>{const i=await t.readContract({address:f,abi:C,functionName:"getPoll",args:[e]});return console.log("poll details retrieved:>> ",i),i},vote:async(e,i)=>{console.log("voting on poll:>> ",e,i);const u=await $(T,{address:f,abi:C,functionName:"vote",args:[e,i]});console.log("vote tx hash:>> ",u);const l=await D(T,{hash:u,timeout:6e4});if(console.log("Transaction receipt:",l),l.status==="reverted")throw new Error("Transaction reverted");return l}}}export{Ft as u};
